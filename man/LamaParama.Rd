% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/do_adjustRtime-functions.R
\name{LamaParama}
\alias{LamaParama}
\alias{LamaParama-class}
\alias{matchLamasChromPeaks}
\alias{summarizeLamaMatch}
\alias{matchedRtimes}
\title{Landmark-based alignment: aligning a dataset against an external
reference}
\usage{
matchLamasChromPeaks(object, param, BPPARAM = bpparam())

summarizeLamaMatch(param)

matchedRtimes(param)
}
\arguments{
\item{object}{An object of class `XcmsExperiment` with defined ChromPeaks.}

\item{param}{An object of class `LamaParama` that will later be used for
adjustment using the `[adjustRtime()]` function.}

\item{BPPARAM}{For `matchLamasChromPeaks()`: parallel processing setup.
Defaults to `BPPARAM = bpparam()`. See [bpparam()] for more information.}

\item{LamaParama}{same object that will be passed to the `adjustRtime()`
function. To run this function the `matchLamasChromPeaks()` need to be run
on this first.}
}
\value{
For `matchLamasChromPeaks()`: A `LamaParama` object with new slot `rtMap`
composed of a list of matrices representing the 1:1 matches between Lamas
(ref) and ChromPeaks (obs). To access this, `matchedRtimes()` can be used.

For `matchedRtimes()`: A list of `data.frame` representing matches
between chromPeaks and `lamas` for each files.

For `summarizeLamaMatch()`:A `data.frame` with:

- "Total_peaks": total number of chromatographic peaks in the file.

- "Matched_peak": The number of matched peaks to Lamas.

- "Total_Lamas": Total number of Lamas.

- "Model_summary": `summary.loess` or `summary.gam` object for each file.
}
\description{
Alignment is achieved using the ['adjustRtime()'] method with a `param` of
class `LamaParama`. This method #' corrects retention time by aligning
chromatographic data with an external reference dataset. Peaks in the
experimental chromatographic data are aligned to predefined landmark
features called "lamas" based on their mass-to-charge ratio (m/z) and
retention time.

This alignment algorithm matches chromatographic peaks from the experimental
data to the lamas, fitting a model based on this match to adjust their
retention times and minimize discrepancies. This adjustment is performed
file by file. Adjustable parameters such as `ppm`, `tolerance`, and
`toleranceRt` define acceptable deviations during the matching process.
It's crucial to note that only lamas and chromatographic peaks exhibiting a
one-to-one mapping are considered when estimating retention time shifts. If
a file has no peaks matching with lamas, no adjustment will be performed,
and the file will be returned as-is. Users can evaluate this matching, for
example, by checking the number of matches and ranges of the matching
peaks, by first running `[matchLamasChromPeaks()]`.

Different warping methods are available; users can choose to fit a *loess*
(`method = "loess"`, the default) or a *gam* (`method = "gam"`) between the
reference data points and observed matching ChromPeaks. Additional
parameters such as `span`, `weight`, `outlierTolerance`, `zeroWeight`,
and `bs` are specific to these models. These parameters offer flexibility
in fine-tuning how the matching chromatographic peaks are fitted to the
lamas, thereby generating a model to align the overall retention time for
a single file.

Other functions related to this method:

 - `LamaParama()`: create the parameter object for alignment using
   `adjustRtime()` function. Is also the input for functions listed below.

 - `matchLamasChromPeaks()`: quickly matches each file's ChromPeaks
   to Lamas, allowing the user to evaluate the matches for each file.

 - `summarizeLamaMatch()`: generates a summary of the `LamaParama` method.
   See below for the details of the return object.

 - `matchedRtimes()`: Access the list of `data.frame` saved in the
   `LamaParama` object, generated by the `matchLamasChromPeaks()` function.
}
\note{
If there are no matches when using `matchLamasChromPeaks()`, the file
retention will not be adjusted when calling [adjustRtime()] with the same
`LamaParama` and `XcmsExperiment` object.

To see examples on how to utilize this methods and its functionality,
see the vignette.
}
\examples{
## load test and reference datasets
ref <- loadXcmsData("xmse")
tst <- loadXcmsData("faahko_sub2")

## create lamas input from the reference dataset
f <- sampleData(ref)$sample_type
f[f == "QC"] <- NA
ref <- filterFeatures(ref, PercentMissingFilter(threshold = 0, f = f))
ref_mz_rt <- featureDefinitions(ref)[, c("mzmed","rtmed")]

## Set up the LamaParama object
param <- LamaParama(lamas = ref_mz_rt, method = "loess", span = 0.5,
                     outlierTolerance = 3, zeroWeight = 10, ppm = 20,
                     tolerance = 0, toleranceRt = 20, bs = "tp")

## input into `adjustRtime()`
tst_adjusted <- adjustRtime(tst, param = param)

## run diagnostic functions to pre-evaluate alignment
param <- matchLamasChromPeaks(tst, param = param)
mtch <- matchedRtimes(param)

## Access summary of matches and model information
summary <- summarizeLamaMatch(param)

##coverage for each file
summary$Matched_peaks / summary$Total_peaks * 100

## Access the information on the model of for the first file
summary$model_summary[[1]]

}
\author{
Carl Brunius, Philippine Louail
}
